#
# Deploys the bot resources needed for the Skills Functional Tests.
#

name: "$(BUILD.BUILDID)"
trigger: none
pr: none

pool:
  vmImage: "windows-2022"

parameters:
  - name: dependenciesVersionDotNetHosts
    displayName: DotNet Hosts Version
    type: string
    default: $env:DEPENDENCIESVERSIONDOTNETHOSTS

  - name: dependenciesRegistryDotNetHosts
    displayName: DotNet Hosts Registry
    type: string
    default: Artifacts
    values:
    - Artifacts
    - MyGet
    - NuGet

  - name: dependenciesVersionDotNetSkills
    displayName: DotNet Skills Version
    type: string
    default: $env:DEPENDENCIESVERSIONDOTNETSKILLS

  - name: dependenciesRegistryDotNetSkills
    displayName: DotNet Skills Registry
    type: string
    default: Artifacts
    values:
    - Artifacts
    - MyGet
    - NuGet

  - name: dependenciesVersionDotNetSkillsV3
    displayName: DotNet Skills V3 Version
    type: string
    default: $env:DEPENDENCIESVERSIONDOTNETSKILLSV3

  - name: dependenciesRegistryDotNetSkillsV3
    displayName: DotNet Skills V3 Registry
    type: string
    default: MyGet
    values:
    - MyGet
    - NuGet

  - name: dependenciesVersionJSHosts
    displayName: JS Hosts Version
    type: string
    default: $env:DEPENDENCIESVERSIONJSHOSTS

  - name: dependenciesRegistryJSHosts
    displayName: JS Hosts Registry
    type: string
    default: MyGet
    values:
    - MyGet
    - Npm

  - name: dependenciesVersionJSSkills
    displayName: JS Skills Version
    type: string
    default: $env:DEPENDENCIESVERSIONJSSKILLS

  - name: dependenciesRegistryJSSkills
    displayName: JS Skills Registry
    type: string
    default: MyGet
    values:
    - MyGet
    - Npm

  - name: dependenciesVersionJSSkillsV3
    displayName: JS Skills V3 Version
    type: string
    default: $env:DEPENDENCIESVERSIONJSSKILLSV3

  - name: dependenciesRegistryJSSkillsV3
    displayName: JS Skills V3 Registry
    type: string
    default: MyGet
    values:
    - MyGet
    - Npm

  - name: dependenciesVersionPythonHosts
    displayName: Python Hosts Version
    type: string
    default: $env:DEPENDENCIESVERSIONPYTHONHOSTS

  - name: dependenciesRegistryPythonHosts
    displayName: Python Hosts Registry
    type: string
    default: Artifacts
    values:
    - Artifacts
    - Pypi
    - Test.Pypi

  - name: dependenciesVersionPythonSkills
    displayName: Python Skills Version
    type: string
    default: $env:DEPENDENCIESVERSIONPYTHONSKILLS

  - name: dependenciesRegistryPythonSkills
    displayName: Python Skills Registry
    type: string
    default: Artifacts
    values:
    - Artifacts
    - Pypi
    - Test.Pypi

variables:
  BuildConfiguration: "Debug"
  BuildPlatform: "AnyCPU"
  ## Azure Resources (Define these variables in Azure)
  # AzureSubscription: Service Connection Name to Manage Azure resources.
  # AppServicePlanDotNetName: Name of the App Service Plan for DotNet bots.
  # AppServicePlanJSName: Name of the App Service Plan for JavaScript bots.
  # AppServicePlanPythonName: Name of the App Service Plan for Python bots.
  # BotPricingTier: (optional) Pricing Tier for the bots, default F0.
  # ContainerRegistryName: (optional) Name of the Container Registry.
  # ResourceGroup: (optional) Name of the Resource Group where the bots will be deployed.
  # ResourceSuffix: (optional) Alphanumeric suffix to add to the resources' name to avoid collisions.
  # SharedResourceGroup: (optional) Name of the Shared Resource Group.
  # VirtualNetworkName: (optional) Name of the Virtual Network.

  ## Bots Configuration (Define these variables in Azure)
  # BffnComposerHostBotDotNetAppId: App Id for BffnComposerHostBotDotNet bot.
  # BffnComposerHostBotDotNetAppSecret: App Secret for BffnComposerHostBotDotNet bot.
  # BffnComposerSkillBotDotNetAppId: App Id for BffnComposerSkillBotDotNet bot.
  # BffnComposerSkillBotDotNetAppSecret: App Secret for BffnComposerSkillBotDotNet bot.
  # BffnEchoSkillBotComposerDotNetAppId: App Id for BffnEchoSkillBotComposerDotNet bot.
  # BffnEchoSkillBotComposerDotNetAppSecret: App Secret for BffnEchoSkillBotComposerDotNet bot.
  # BffnEchoSkillBotDotNetAppId: App Id for BffnEchoSkillBotDotNet bot.
  # BffnEchoSkillBotDotNetAppSecret: App Secret for BffnEchoSkillBotDotNet bot.
  # BffnEchoSkillBotDotNet31AppId: App Id for BffnEchoSkillBotDotNet31 bot.
  # BffnEchoSkillBotDotNet31AppSecret: App Secret for BffnEchoSkillBotDotNet31 bot.
  # BffnEchoSkillBotDotNetSTAppId: App Id for BffnEchoSkillBotDotNetST bot.
  # BffnEchoSkillBotDotNetSTAppSecret: App Secret for BffnEchoSkillBotDotNetST bot.
  # BffnEchoSkillBotDotNetV3AppId: App Id for BffnEchoSkillBotDotNetV3 bot.
  # BffnEchoSkillBotDotNetV3AppSecret: App Secret for BffnEchoSkillBotDotNetV3 bot.
  # BffnEchoSkillBotJSAppId: App Id for BffnEchoSkillBotJS bot.
  # BffnEchoSkillBotJSAppSecret: App Secret for BffnEchoSkillBotJS bot.
  # BffnEchoSkillBotJSSTAppId: App Id for BffnEchoSkillBotJSST bot.
  # BffnEchoSkillBotJSSTAppSecret: App Secret for BffnEchoSkillBotJSST bot.
  # BffnEchoSkillBotJSV3AppId: App Id for BffnEchoSkillBotJSV3 bot.
  # BffnEchoSkillBotJSV3AppSecret: App Secret for BffnEchoSkillBotJSV3 bot.
  # BffnEchoSkillBotPythonAppId: App Id for BffnEchoSkillBotPython bot.
  # BffnEchoSkillBotPythonAppSecret: App Secret for BffnEchoSkillBotPython bot.
  # BffnSimpleHostBotComposerDotNetAppId: App Id for BffnSimpleHostBotComposerDotNet bot.
  # BffnSimpleHostBotComposerDotNetAppSecret: App Secret for BffnSimpleHostBotComposerDotNet bot.
  # BffnSimpleHostBotDotNetAppId: App Id for BffnSimpleHostBotDotNet bot.
  # BffnSimpleHostBotDotNetAppSecret: App Secret for BffnSimpleHostBotDotNet bot.
  # BffnSimpleHostBotDotNet31AppId: App Id for BffnSimpleHostBotDotNet31 bot.
  # BffnSimpleHostBotDotNet31AppSecret: App Secret for BffnSimpleHostBotDotNet31 bot.
  # BffnSimpleHostBotDotNetSTAppId: App Id for BffnSimpleHostBotDotNetST bot.
  # BffnSimpleHostBotDotNetSTAppSecret: App Secret for BffnSimpleHostBotDotNetST bot.
  # BffnSimpleHostBotJSAppId: App Id for BffnSimpleHostBotJS bot.
  # BffnSimpleHostBotJSAppSecret: App Secret for BffnSimpleHostBotJS bot.
  # BffnSimpleHostBotJSSTAppId: App Id for BffnSimpleHostBotJSST bot.
  # BffnSimpleHostBotJSSTAppSecret: App Secret for BffnSimpleHostBotJSST bot.
  # BffnSimpleHostBotPythonAppId: App Id for BffnSimpleHostBotPython bot.
  # BffnSimpleHostBotPythonAppSecret: App Secret for BffnSimpleHostBotPython bot.
  # BffnWaterfallHostBotDotNetAppId: App Id for BffnWaterfallHostBotDotNet bot.
  # BffnWaterfallHostBotDotNetAppSecret: App Secret for BffnWaterfallHostBotDotNet bot.
  # BffnWaterfallSkillBotDotNetAppId: App Id for BffnWaterfallSkillBotDotNet bot.
  # BffnWaterfallSkillBotDotNetAppSecret: App Secret for BffnWaterfallSkillBotDotNet bot.
  # BffnWaterfallHostBotJSAppId: App Id for BffnWaterfallHostBotJS bot.
  # BffnWaterfallHostBotJSAppSecret: App Secret for BffnWaterfallHostBotJS bot.
  # BffnWaterfallSkillBotJSAppId: App Id for BffnWaterfallSkillBotJS bot.
  # BffnWaterfallSkillBotJSAppSecret: App Secret for BffnWaterfallSkillBotJS bot.
  # BffnWaterfallHostBotPythonAppId: App Id for BffnWaterfallHostBotPython bot.
  # BffnWaterfallHostBotPythonAppSecret: App Secret for BffnWaterfallHostBotPython bot.
  # BffnWaterfallSkillBotPythonAppId: App Id for BffnWaterfallSkillBotPython bot.
  # BffnWaterfallSkillBotPythonAppSecret: App Secret for BffnWaterfallSkillBotPython bot.
  # ConnectionName: (optional) Name for the OAuth connection to use in the skill bots.

  ## DependenciesVersion (Define these variables in Azure) Possible values are: Latest (default), Stable, or specific version numbers.
  # DependenciesVersionDotNetHosts: (optional) Bot Builder dependency version to use for DotNet host bots.
  # DependenciesVersionDotNetSkills: (optional) Bot Builder dependency version to use for DotNet skill bots.
  # DependenciesVersionDotNetSkillsV3: (optional) Bot Builder dependency version to use for DotNet skill V3 bots.
  # DependenciesVersionJSHosts: (optional) Bot Builder dependency version to use for JS host bots.
  # DependenciesVersionJSSkills: (optional) Bot Builder dependency version to use for JS skill bots.
  # DependenciesVersionJSSkillsV3: (optional) Bot Builder dependency version to use for JS skill V3 bots.
  # DependenciesVersionPythonHosts: (optional) Bot Builder dependency version to use for Python host bots.
  # DependenciesVersionPythonSkills: (optional) Bot Builder dependency version to use for Python skill bots.

  ## Internal variables
  InternalAppInsightsName: 'bffnappinsights$(INTERNALRESOURCESUFFIX)'
  InternalAppServicePlanDotNetName: $(APPSERVICEPLANDOTNETNAME)$(INTERNALRESOURCESUFFIX)
  InternalAppServicePlanJSName: $(APPSERVICEPLANJSNAME)$(INTERNALRESOURCESUFFIX)
  InternalAppServicePlanPythonName: $(APPSERVICEPLANPYTHONNAME)$(INTERNALRESOURCESUFFIX)
  InternalContainerRegistryName: $[coalesce(variables['CONTAINERREGISTRYNAME'], 'bffncontainerregistry$(INTERNALRESOURCESUFFIX)')]
  InternalProjectTag: $[coalesce(variables['PROJECTTAG'], 'BFFN')]
  InternalKeyVaultName: 'bffnbotkeyvault$(INTERNALRESOURCESUFFIX)'
  InternalResourceGroupName: $[coalesce(variables['RESOURCEGROUP'], 'BFFN')]
  InternalResourceSuffix: $[coalesce(variables['RESOURCESUFFIX'], '')]
  InternalSharedResourceGroupName: $[coalesce(variables['SHAREDRESOURCEGROUP'], 'BFFN-Shared')]
  InternalVirtualNetworkName: $[coalesce(variables['VIRTUALNETWORKNAME'], 'bffnvirtualnetwork$(INTERNALRESOURCESUFFIX)')]

stages:
# Resource Groups
  - template: common/prepareResources.yml
    parameters:
      azureSubscription: "$(AZURESUBSCRIPTION)"
      resourceGroups: 
        - id: "Prepare_DotNetGroup"
          name: "$(INTERNALRESOURCEGROUPNAME)-DotNet"
          displayName: "Prepare DotNet's Resource Group"

        - id: "Prepare_JSGroup"
          name: "$(INTERNALRESOURCEGROUPNAME)-JS"
          displayName: "Prepare JS's Resource Group"

        - id: "Prepare_PythonGroup"
          name: "$(INTERNALRESOURCEGROUPNAME)-Python"
          displayName: "Prepare Python's Resource Group"

# DotNet
  - template: dotnet/deploy.yml
    parameters:
      appInsight: "$(INTERNALAPPINSIGHTSNAME)"
      appServicePlan: "$(INTERNALAPPSERVICEPLANDOTNETNAME)"
      azureSubscription: "$(AZURESUBSCRIPTION)"
      botPricingTier: $env:BOTPRICINGTIER
      connectionName: $env:CONNECTIONNAME
      keyVault: "$(INTERNALKEYVAULTNAME)"
      projectTag: "$(INTERNALPROJECTTAG)"
      resourceGroup: "$(INTERNALRESOURCEGROUPNAME)-DotNet"
      resourceSuffix: $(INTERNALRESOURCESUFFIX)
      sharedResourceGroup: "$(INTERNALSHAREDRESOURCEGROUPNAME)"
      virtualNetwork: "$(INTERNALVIRTUALNETWORKNAME)"
      bots:
        # DotNet bots
        - name: "bffnsimplehostbotdotnet"
          dependsOn: "Prepare_DotNetGroup"
          type: "Host"
          displayName: "DotNet Simple Host Bot"
          appId: $(BFFNSIMPLEHOSTBOTDOTNETAPPID)
          appSecret: $(BFFNSIMPLEHOSTBOTDOTNETAPPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/DotNet/SimpleHostBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.SimpleHostBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}

        - name: "bffnsimplehostbotdotnet31"
          dependsOn: "Prepare_DotNetGroup"
          type: "Host"
          displayName: "DotNet Simple Host Bot 3.1"
          appId: $(BFFNSIMPLEHOSTBOTDOTNET31APPID)
          appSecret: $(BFFNSIMPLEHOSTBOTDOTNET31APPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/DotNet/SimpleHostBot-3.1'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.SimpleHostBot31.csproj"
            netCoreVersion: "3.1.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}

        - name: "bffnechoskillbotdotnet"
          dependsOn: "Prepare_DotNetGroup"
          type: "Skill"
          displayName: "DotNet Echo Skill Bot"
          appId: $(BFFNECHOSKILLBOTDOTNETAPPID)
          appSecret: $(BFFNECHOSKILLBOTDOTNETAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/DotNet/EchoSkillBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.EchoSkillBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

        - name: "bffnechoskillbotdotnet31"
          dependsOn: "Prepare_DotNetGroup"
          type: "Skill"
          displayName: "DotNet Echo Skill Bot 3.1"
          appId: $(BFFNECHOSKILLBOTDOTNET31APPID)
          appSecret: $(BFFNECHOSKILLBOTDOTNET31APPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/DotNet/EchoSkillBot-3.1'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.EchoSkillBot31.csproj"
            netCoreVersion: "3.1.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

        # DotNet V3 bots
        - name: "bffnechoskillbotdotnetv3"
          dependsOn: "Prepare_DotNetGroup"
          type: "SkillV3"
          displayName: "DotNet Echo Skill Bot v3"
          appId: $(BFFNECHOSKILLBOTDOTNETV3APPID)
          appSecret: $(BFFNECHOSKILLBOTDOTNETV3APPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/DotNet/EchoSkillBot-v3'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.EchoSkillBot-v3.csproj"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkillsV3 }}
            version: ${{ parameters.dependenciesVersionDotNetSkillsV3 }}

        - name: "bffnwaterfallhostbotdotnet"
          dependsOn: "Deploy_bffnsimplehostbotdotnet"
          type: "Host"
          displayName: "DotNet Waterfall Host Bot"
          appId: $(BFFNWATERFALLHOSTBOTDOTNETAPPID)
          appSecret: $(BFFNWATERFALLHOSTBOTDOTNETAPPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/DotNet/WaterfallHostBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.WaterfallHostBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}

        - name: "bffnwaterfallskillbotdotnet"
          dependsOn: "Deploy_bffnsimplehostbotdotnet31"
          type: "Skill"
          displayName: "DotNet Waterfall Skill Bot"
          appId: $(BFFNWATERFALLSKILLBOTDOTNETAPPID)
          appSecret: $(BFFNWATERFALLSKILLBOTDOTNETAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/DotNet/WaterfallSkillBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.WaterfallSkillBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

        # DotNet Composer bots
        - name: "bffnsimplehostbotcomposerdotnet"
          dependsOn: "Deploy_bffnechoskillbotdotnet"
          type: "ComposerHost"
          displayName: "DotNet Simple Composer Host Bot"
          appId: $(BFFNSIMPLEHOSTBOTCOMPOSERDOTNETAPPID)
          appSecret: $(BFFNSIMPLEHOSTBOTCOMPOSERDOTNETAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/DotNet/SimpleHostBotComposer'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.SimpleHostBotComposer.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}

        - name: "bffnechoskillbotcomposerdotnet"
          dependsOn: "Deploy_bffnechoskillbotdotnet31"
          type: "ComposerSkill"
          displayName: "DotNet Echo Composer Skill Bot"
          appId: $(BFFNECHOSKILLBOTCOMPOSERDOTNETAPPID)
          appSecret: $(BFFNECHOSKILLBOTCOMPOSERDOTNETAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/DotNet/EchoSkillBotComposer'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.EchoSkillBotComposer.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

        - name: "bffncomposerhostbotdotnet"
          dependsOn: "Deploy_bffnechoskillbotdotnetv3"
          type: "ComposerHost"
          displayName: "DotNet Composer Host Bot"
          appId: $(BFFNCOMPOSERHOSTBOTDOTNETAPPID)
          appSecret: $(BFFNCOMPOSERHOSTBOTDOTNETAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/DotNet/ComposerHostBotDotNet'
            name: "ComposerHostBotDotNet.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

        - name: "bffncomposerskillbotdotnet"
          dependsOn: "Deploy_bffnwaterfallhostbotdotnet"
          type: "ComposerSkill"
          displayName: "DotNet Composer Skill Bot"
          appId: $(BFFNCOMPOSERSKILLBOTDOTNETAPPID)
          appSecret: $(BFFNCOMPOSERSKILLBOTDOTNETAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/DotNet/ComposerSkillBotDotNet'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.ComposerSkillBotDotNet.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

        # DotNet SingleTenant bots
        - name: "bffnsimplehostbotdotnetst"
          dependsOn: "Deploy_bffnechoskillbotcomposerdotnet"
          type: "Host"
          displayName: "DotNet Simple Host Bot SingleTenant"
          appId: $(BFFNSIMPLEHOSTBOTDOTNETSTAPPID)
          appSecret: $(BFFNSIMPLEHOSTBOTDOTNETSTAPPSECRET)
          appType: "SingleTenant"
          project:
            directory: 'Bots/DotNet/SimpleHostBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.SimpleHostBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}

        - name: "bffnechoskillbotdotnetst"
          dependsOn: "Deploy_bffncomposerhostbotdotnet"
          type: "Skill"
          displayName: "DotNet Echo Skill Bot SingleTenant"
          appId: $(BFFNECHOSKILLBOTDOTNETSTAPPID)
          appSecret: $(BFFNECHOSKILLBOTDOTNETSTAPPSECRET)
          appType: "SingleTenant"
          project: 
            directory: 'Bots/DotNet/EchoSkillBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.EchoSkillBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

        # DotNet UserAssignedMSI bots
        - name: "bffnsimplehostbotdotnetmsi"
          dependsOn: "Deploy_bffnwaterfallskillbotdotnet"
          type: "Host"
          displayName: "DotNet Simple Host Bot UserAssignedMSI"
          appType: "UserAssignedMSI"
          project:
            directory: 'Bots/DotNet/SimpleHostBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.SimpleHostBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}

        - name: "bffnechoskillbotdotnetmsi"
          dependsOn: "Deploy_bffnsimplehostbotcomposerdotnet"
          type: "Skill"
          displayName: "DotNet Echo Skill Bot UserAssignedMSI"
          appType: "UserAssignedMSI"
          project: 
            directory: 'Bots/DotNet/EchoSkillBot'
            name: "Microsoft.Bot.Builder.FunctionalTestsBots.EchoSkillBot.csproj"
            netCoreVersion: "6.0.x"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetSkills }}
            version: ${{ parameters.dependenciesVersionDotNetSkills }}

# JS
  - template: js/deploy.yml
    parameters:
      appInsight: "$(INTERNALAPPINSIGHTSNAME)"
      appServicePlan: "$(INTERNALAPPSERVICEPLANJSNAME)"
      azureSubscription: "$(AZURESUBSCRIPTION)"
      botPricingTier: $env:BOTPRICINGTIER
      connectionName: $env:CONNECTIONNAME
      dependsOn: "Prepare_JSGroup"
      keyVault: "$(INTERNALKEYVAULTNAME)"
      projectTag: "$(INTERNALPROJECTTAG)"
      resourceGroup: "$(INTERNALRESOURCEGROUPNAME)-JS"
      resourceSuffix: $(INTERNALRESOURCESUFFIX)
      sharedResourceGroup: "$(INTERNALSHAREDRESOURCEGROUPNAME)"
      virtualNetwork: "$(INTERNALVIRTUALNETWORKNAME)"
      bots:
        # JS bots
        - name: "bffnsimplehostbotjs"
          type: "Host"
          displayName: "JS Simple Host Bot"
          appId: $(BFFNSIMPLEHOSTBOTJSAPPID)
          appSecret: $(BFFNSIMPLEHOSTBOTJSAPPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/JavaScript/SimpleHostBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSHosts }}
            version: ${{ parameters.dependenciesVersionJSHosts }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36000"
            command: "npm start"

        - name: "bffnechoskillbotjs"
          type: "Skill"
          displayName: "JS Echo Skill Bot"
          appId: $(BFFNECHOSKILLBOTJSAPPID)
          appSecret: $(BFFNECHOSKILLBOTJSAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/JavaScript/EchoSkillBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSSkills }}
            version: ${{ parameters.dependenciesVersionJSSkills }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36400"
            command: "npm start"

        - name: "bffnechoskillbotjsv3"
          type: "SkillV3"
          displayName: "JS Echo Skill Bot v3"
          appId: $(BFFNECHOSKILLBOTJSV3APPID)
          appSecret: $(BFFNECHOSKILLBOTJSV3APPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/JavaScript/EchoSkillBot-v3'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSSkillsV3 }}
            version: ${{ parameters.dependenciesVersionJSSkillsV3 }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36407"
            command: "npm start"

        - name: "bffnwaterfallhostbotjs"
          type: "Host"
          displayName: "JS Waterfall Host Bot"
          appId: $(BFFNWATERFALLHOSTBOTJSAPPID)
          appSecret: $(BFFNWATERFALLHOSTBOTJSAPPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/JavaScript/WaterfallHostBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSHosts }}
            version: ${{ parameters.dependenciesVersionJSHosts }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36020"
            command: "npm start"

        - name: "bffnwaterfallskillbotjs"
          type: "Skill"
          displayName: "JS Waterfall Skill Bot"
          appId: $(BFFNWATERFALLSKILLBOTJSAPPID)
          appSecret: $(BFFNWATERFALLSKILLBOTJSAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/JavaScript/WaterfallSkillBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSSkills }}
            version: ${{ parameters.dependenciesVersionJSSkills }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36420"
            command: "npm start"

        # JS SingleTenant bots
        - name: "bffnsimplehostbotjsst"
          type: "Host"
          displayName: "JS Simple Host Bot SingleTenant"
          appId: $(BFFNSIMPLEHOSTBOTJSSTAPPID)
          appSecret: $(BFFNSIMPLEHOSTBOTJSSTAPPSECRET)
          appType: "SingleTenant"
          project:
            directory: 'Bots/JavaScript/SimpleHostBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSHosts }}
            version: ${{ parameters.dependenciesVersionJSHosts }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36000"
            command: "npm start"

        - name: "bffnechoskillbotjsst"
          type: "Skill"
          displayName: "JS Echo Skill Bot SingleTenant"
          appId: $(BFFNECHOSKILLBOTJSSTAPPID)
          appSecret: $(BFFNECHOSKILLBOTJSSTAPPSECRET)
          appType: "SingleTenant"
          project: 
            directory: 'Bots/JavaScript/EchoSkillBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSSkills }}
            version: ${{ parameters.dependenciesVersionJSSkills }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36400"
            command: "npm start"

        # JS UserAssignedMSI bots
        - name: "bffnsimplehostbotjsmsi"
          type: "Host"
          displayName: "JS Simple Host Bot UserAssignedMSI"
          appType: "UserAssignedMSI"
          project:
            directory: 'Bots/JavaScript/SimpleHostBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSHosts }}
            version: ${{ parameters.dependenciesVersionJSHosts }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36000"
            command: "npm start"

        - name: "bffnechoskillbotjsmsi"
          type: "Skill"
          displayName: "JS Echo Skill Bot UserAssignedMSI"
          appType: "UserAssignedMSI"
          project: 
            directory: 'Bots/JavaScript/EchoSkillBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSSkills }}
            version: ${{ parameters.dependenciesVersionJSSkills }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "36400"
            command: "npm start"

# Python
  - template: python/deploy.yml
    parameters:
      appInsight: "$(INTERNALAPPINSIGHTSNAME)"
      appServicePlan: "$(INTERNALAPPSERVICEPLANPYTHONNAME)"
      azureSubscription: "$(AZURESUBSCRIPTION)"
      botPricingTier: $env:BOTPRICINGTIER
      connectionName: $env:CONNECTIONNAME
      dependsOn: "Prepare_PythonGroup"
      keyVault: "$(INTERNALKEYVAULTNAME)"
      projectTag: "$(INTERNALPROJECTTAG)"
      resourceGroup: "$(INTERNALRESOURCEGROUPNAME)-Python"
      resourceSuffix: "$(INTERNALRESOURCESUFFIX)"
      sharedResourceGroup: "$(INTERNALSHAREDRESOURCEGROUPNAME)"
      virtualNetwork: "$(INTERNALVIRTUALNETWORKNAME)"
      bots:
        - name: "bffnsimplehostbotpython"
          type: "Host"
          displayName: "Python Simple Host Bot"
          appId: $(BFFNSIMPLEHOSTBOTPYTHONAPPID)
          appSecret: $(BFFNSIMPLEHOSTBOTPYTHONAPPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/Python/SimpleHostBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryPythonHosts }}
            version: ${{ parameters.dependenciesVersionPythonHosts }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "37000"
            command: "python app.py"

        - name: "bffnechoskillbotpython"
          type: "Skill"
          displayName: "Python Echo Skill Bot"
          appId: $(BFFNECHOSKILLBOTPYTHONAPPID)
          appSecret: $(BFFNECHOSKILLBOTPYTHONAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/Python/EchoSkillBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryPythonSkills }}
            version: ${{ parameters.dependenciesVersionPythonSkills }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "37400"
            command: "python app.py"

        - name: "bffnwaterfallhostbotpython"
          type: "Host"
          displayName: "Python Waterfall Host Bot"
          appId: $(BFFNWATERFALLHOSTBOTPYTHONAPPID)
          appSecret: $(BFFNWATERFALLHOSTBOTPYTHONAPPSECRET)
          appType: "MultiTenant"
          project:
            directory: 'Bots/Python/WaterfallHostBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryPythonHosts }}
            version: ${{ parameters.dependenciesVersionPythonHosts }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "37020"
            command: "python app.py"

        - name: "bffnwaterfallskillbotpython"
          type: "Skill"
          displayName: "Python Waterfall Skill Bot"
          appId: $(BFFNWATERFALLSKILLBOTPYTHONAPPID)
          appSecret: $(BFFNWATERFALLSKILLBOTPYTHONAPPSECRET)
          appType: "MultiTenant"
          project: 
            directory: 'Bots/Python/WaterfallSkillBot'
          dependency:
            registry: ${{ parameters.dependenciesRegistryPythonSkills }}
            version: ${{ parameters.dependenciesVersionPythonSkills }}
          container:
            registry: "$(INTERNALCONTAINERREGISTRYNAME)"
            port: "37420"
            command: "python app.py"
